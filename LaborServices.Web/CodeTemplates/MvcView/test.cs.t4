<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#=        ViewDataTypeName #>

<#
    // "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
    string boolType = "System.Boolean";
    Version requiredMvcVersion = new Version("5.1.0.0");
    bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
    // The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
    if(IsPartialView) {

    } else if(IsLayoutPageSelected) {

      
#>

  @{
    ViewBag.Title = "<#=            ViewName#>";

@}

<#
    }#>

@using (Html.BeginForm())
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="modalLabel">Create New</h4>
    </div>
    
    <div class="modal-body">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">          
            @Html.ValidationSummary(true)
          
            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Sort, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Sort, SelectListUtility.GetSortList(), "Select a sort value", new { @class = "form-control autocomplete" })
                    @Html.ValidationMessageFor(model => model.Sort)
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        @Html.CheckBox("CreateAnother")
        @Html.Label("CreateAnother", "Create another")

        <button type="submit" class="btn btn-primary btn-preload">Create</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    </div>
}