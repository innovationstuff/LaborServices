@using LaborServices.Web.Models
@model HourlyWorkersViewModel
@{
    ViewBag.Title = "اختر الموقع";
    var routeData = ViewContext.RouteData.Values;
    string lang = routeData["lang"] as string;
    string dateLang = lang == "ar" ? "ar-ly" : "en";
    string inputTextAlign = lang == "ar" ? "text-right" : "text-left";
    string inputTextdirection = lang == "ar" ? "text-left" : "text-right";
}

<section class="loginPage">
    <div class="content">
        <div class="container">
            <div class="row">
                <div class="col mt-4 p-0">
                    <div class="bg-white text-dark rounded rounded-20px p-4 p-lg-5" style="margin: auto;width: 97%;">
                        <div class="row text-left">
                            <div class="col-12 text-center mb-3"><img src="~/Images/frontEnd/dalal.png" alt="دلال" /></div>
                            <div class="row col-12">
                                <div class="col-12 col-sm-10 col-lg-8">

                                    <div class="col-12 col-lg-12">
                                        <div class="p-2 mb-3 bg-info text-white text-center"><span class="d-lg-none">(3)</span>&nbsp;@DbRes.T("ChooseLocation", "DalalResources")</div>
                                    </div>

                                    <div class="col-12 col-lg-12" style="margin-bottom:10px;">
                                        @Html.TextBox("Location", "", new { @class = "form-control", placeholder = "Enter a location" })
                                    </div>


                                    <div class="col-12 col-lg-12">

                                        <div id="AreaMap" style="width: 100%; height: 600px;">
                                        </div>
                                    </div>

                                    <div class=" col-12 col-lg-12  margin-top-10">
                                        @using (Html.BeginForm("NextStep", "HourlyWorkers", FormMethod.Post))
    {
                                    @*<div class="form-group row ">
        <label for="s1" class="col-sm-4 col-form-label">وصف العنوان<span class="required symbol"></span></label>
        <div class="col-sm-8">
            <input class="form-control rounded-0" type="text" placeholder="مثال : يجوار مدرسة ...">
        </div>
    </div>*@

                                    <div class="form-group row" style="margin-top:20px;">
                                        @Html.LabelFor(m => Model.HouseType, DbRes.T("House Type", "DalalResources"), new { @class = "col-sm-4 col-form-label" })
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(model => model.HouseType, new List<SelectListItem>(), DbRes.T("Select House Type", "DalalResources"), new { @class = "form-control " + inputTextAlign })
                                            @Html.ValidationMessageFor(m => m.HouseType, "", new { @class = "text-danger lblValidation" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(m => Model.HouseNo, DbRes.T("House No", "DalalResources"), new { @class = "col-sm-4 col-form-label" })
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.HouseNo, new { htmlAttributes = new { @class = "form-control  rounded-0 " + inputTextAlign, placeholder = DbRes.T("Enter House No", "DalalResources"), required = (string)null } })
                                            @Html.ValidationMessageFor(m => m.HouseNo, "", new { @class = "text-danger lblValidation" })
                                        </div>
                                    </div>


                                    <div class="form-group row" id="FloorNoDiv">
                                        @Html.LabelFor(m => Model.FloorNo, DbRes.T("Floor No", "DalalResources"), new { @class = "col-sm-4 col-form-label" })
                                        <div class="col-sm-8">
                                            @Html.DropDownListFor(model => model.FloorNo, new List<SelectListItem>(), DbRes.T("Select Floor No", "DalalResources"), new { @class = "form-control " + inputTextAlign })
                                            @Html.ValidationMessageFor(m => m.FloorNo, "", new { @class = "text-danger lblValidation" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(m => Model.PartmentNo, DbRes.T("PartmentNo", "DalalResources"), new { @class = "col-sm-4 col-form-label" })
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.PartmentNo, new { htmlAttributes = new { @class = "form-control  rounded-0 " + inputTextAlign, placeholder = DbRes.T("PartmentNo", "DalalResources") } })
                                            @Html.ValidationMessageFor(m => m.PartmentNo, "", new { @class = "text-danger lblValidation" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(m => Model.AddressNotes, DbRes.T("Address Description", "DalalResources"), new { @class = "col-sm-4 col-form-label" })
                                        <div class="col-sm-8">
                                            @Html.EditorFor(model => model.AddressNotes, new { htmlAttributes = new { @class = "form-control  rounded-0 " + inputTextAlign, placeholder = DbRes.T("Address Description PH", "DalalResources"), @required = "" } })
                                            @Html.ValidationMessageFor(m => m.AddressNotes, "", new { @class = "text-danger lblValidation" })
                                        </div>
                                    </div>
                                   
                                    <div class="form-group row">
                                        @Html.HiddenFor(model => model.Latitude)
                                        @Html.HiddenFor(model => model.Longitude)
                                    </div>

                                    <div class="form-group row">
                                        <label class="col-sm-4 col-form-label"></label>
                                        <div class="col-sm-8 inputArea @inputTextdirection" style="direction:ltr !important;">

                                            <input class="btn btn-lg btn-info" type="submit" value="@DbRes.T("NextBtn", "Shared")" name="BtnNext" />
                                            <input class="btn btn-lg btn-outline-secondary" type="submit" value="@DbRes.T("PrevBtn", "Shared")" name="BtnPrevious" />
                                        </div>
                                    </div>
}
                                    </div>
                                </div>

                                <div class="col-2 col-lg-4 d-none d-sm-block">
                                    <div class="">
                                        <!-- ------------------------- -->
                                        <div id="smartwizard" class="sw-main sw-theme-dots">
                                            <ul class="nav nav-tabs step-anchor">
                                                <li>
                                                    <a href="#step-1">
                                                        <span class="d-lg-none">&nbsp;</span>
                                                        <span class="d-none d-lg-block">@DbRes.T("Step", "DalalResources")  ( 1 )<br><small>@DbRes.T("StepOneDesc", "DalalResources") </small></span>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href="#step-2">
                                                        <span class="d-lg-none">&nbsp;</span>
                                                        <span class="d-none d-lg-block">@DbRes.T("Step", "DalalResources")   ( 2 )<br><small>@DbRes.T("StepTwoDesc", "DalalResources") </small></span>
                                                    </a>
                                                </li>
                                                <li class="active">
                                                    <a href="#step-3">
                                                        <span class="d-lg-none">&nbsp;</span>
                                                        <span class="d-none d-lg-block">@DbRes.T("Step", "DalalResources")   ( 3 )<br><small>@DbRes.T("StepThreeDesc", "DalalResources") </small></span>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href="#step-4">
                                                        <span class="d-lg-none">&nbsp;</span>
                                                        <span class="d-none d-lg-block">@DbRes.T("Step", "DalalResources")   ( 4 )<br><small>@DbRes.T("StepFourDesc", "DalalResources") </small></span>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href="#step-5">
                                                        <span class="d-lg-none">&nbsp;</span>
                                                        <span class="d-none d-lg-block">@DbRes.T("Step", "DalalResources")   ( 5 )<br><small>@DbRes.T("StepFiveDesc", "DalalResources") </small></span>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href="#step-6">
                                                        <span class="d-lg-none">&nbsp;</span>
                                                        <span class="d-none d-lg-block">@DbRes.T("Step", "DalalResources")   ( 6 )<br><small>@DbRes.T("StepSixDesc", "DalalResources") </small></span>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                        <!-- ------------------------- -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts
{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCVq-Rrv_-2ijJ26kkT4mFs3_LsHxkhVp0&libraries=places&language=@lang"></script>
    @Scripts.Render("~/bundles/locationpicker")
    <script type="text/javascript">
        window.localStorage.setItem('modelVal', '@Html.Raw(Json.Encode(Model))');
        var modelVal = JSON.parse(window.localStorage.getItem('modelVal'));
        //var markers = [];
        var map;
        var langu = "@lang";

        if (modelVal == null) {
            window.location.replace('@Url.Action("Create")');
        }

        function placeMarker(lat, lng) {
            clearMarkers();
            map.setCenter({
                lat: lat,
                lng: lng
            });

            var mPosition = new google.maps.LatLng(parseFloat(lat), parseFloat(lng));

            var marker = new google.maps.Marker({
                position: mPosition,
                map: map
            });
            markers.push(marker);
            modelVal["Latitude"] = lat;
            modelVal["Longitude"] = lng;
        }

        function clearMarkers() {
            for (var i = 0; i < this.markers.length; i++) {
                this.markers[i].setMap(null);
            }
            this.markers = new Array();
        }

        function CenterControl(controlDiv) {
            // Set CSS for the control border.
            var controlUI = document.createElement('div');
            controlUI.style.backgroundColor = '#fff';
            controlUI.style.border = '2px solid #fff';
            controlUI.style.borderRadius = '3px';
            controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
            controlUI.style.cursor = 'pointer';
            controlUI.style.marginBottom = '22px';
            controlUI.style.textAlign = 'center';
            controlUI.id = 'currentLoc';
            if (langu == "ar") {
                controlUI.title = 'اضغط لتحديد موقعك';
            }
            else {
                controlUI.title = 'Click to select your location';

            }

            controlDiv.appendChild(controlUI);

            // Set CSS for the control interior.
            var controlText = document.createElement('div');
            controlText.style.color = 'rgb(25,25,25)';
            controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
            controlText.style.fontSize = '16px';
            controlText.style.lineHeight = '38px';
            controlText.style.paddingLeft = '5px';
            controlText.style.paddingRight = '5px';
            if (langu == "ar") {
                controlText.innerHTML = 'تحديد موقعى الحالى <i class="fa fa-crosshairs"></i>';

            }
            else {
                controlText.innerHTML = 'Determine your current location<i class="fa fa-crosshairs"></i>';

            }
            controlUI.appendChild(controlText);

            // Setup the click event listeners: simply set the map.
            controlUI.addEventListener('click', function () {
                clearMarkers();
                getCurrentLocation();
            });
        }

        function getCurrentLocation() {
            fakeLoaderFadeIn();
            navigator.geolocation.getCurrentPosition(function (location) {
                $("#Latitude").val(location.coords.latitude);
                $("#Longitude").val(location.coords.longitude);
                $('#AreaMap').locationpicker({
                    location: {
                            
                        latitude: location.coords.latitude,
                        longitude: location.coords.longitude
                    },
                    radius: 0,
                })
                //clearMarkers();
                //placeMarker(location.coords.latitude, location.coords.longitude);
                var geocoder = new google.maps.Geocoder;
                geocodeLatLng(geocoder, map, location.coords.latitude, location.coords.longitude);

                fakeLoaderFadeOut();
            });
            $('#AreaMap').locationpicker('map').map.setZoom(17);
        }

        function geocodeLatLng(geocoder, map, latitude, longitude) {
            var latlng = { lat: parseFloat(latitude), lng: parseFloat(longitude) };
            geocoder.geocode({ 'location': latlng }, function (results, status) {
                if (status === 'OK') {
                    if (results[0]) {
                        $("#Location").val(results[0].formatted_address);
                    } else {
                        window.alert('No results found');
                    }
                } else {
                    window.alert('Geocoder failed due to: ' + status);
                }
            });
        }

        function initMap() {
            var lat1 = 0;
            var lng1 = 0;

            if (lat1 == 0 && lng1 == 0) {
                if (modelVal && modelVal["Latitude"]) {
                    lat1 = parseFloat(modelVal["Latitude"]);
                    lng1 = parseFloat(modelVal["Longitude"]);
                } else {
                    lat1 = 24.7136;
                    lng1 = 46.6753;
                }
            }

            InitializeLocationPicker($("#AreaMap"), lat1, lng1);
            map = $('#AreaMap').locationpicker('map').map;
            //map = $('#AreaMap').locationpicker({
            //    oninitialized: function(){
            //        var cb = function (event) {
            //            $('#AreaMap').locationpicker('map', {
            //                latitude: event.latLng.lat(),
            //                longitude: event.latLng.lng()
            //            })
            //        };
            //        $('#AreaMap').locationpicker('subscribe', {
            //            event: 'click',
            //            callback: cb
            //        });
            //    }
            //});
            var geocoder = new google.maps.Geocoder;
            geocodeLatLng(geocoder, map, lat1, lng1);

            var centerControlDiv = document.createElement('div');
            var centerControl = new CenterControl(centerControlDiv);

            centerControlDiv.index = 1;
            map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);

            getCurrentLocation();

            google.maps.event.addListener(map, 'click', function (event) {
                $("#Latitude").val(event.latLng.lat());
                $("#Longitude").val(event.latLng.lng());
                $('#AreaMap').locationpicker({
                    location: {
                        latitude: event.latLng.lat(),
                        longitude: event.latLng.lng()
                    },
                    radius: 0,
                });
                var geocoder = new google.maps.Geocoder;
                geocodeLatLng(geocoder, map, event.latLng.lat(), event.latLng.lng());
                $('#AreaMap').locationpicker('map').map.setZoom(17);
                //clearMarkers();
                //placeMarker(event.latLng.lat(), event.latLng.lng());
            });
        }

        function InitSelectize(selector, selectizeObj, url, valueField, labelField, requestParams, onChangeFunc) {

            var $selectEntity = selector.selectize({
                selectOnTab: true,
                valueField: valueField,
                labelField: labelField,
                searchField: labelField,
                create: false,
                onChange: function (value) {
                    if (typeof onChangeFunc === "function") {
                        onChangeFunc(value);
                    }
                }
            });

            if (url != '' && url != null) {

                var selectizeInstance = $selectEntity[0].selectize;
                selectizeInstance.clear();
                selectizeInstance.load(function (callback) {
                    $.ajax({
                        url: '' + url + '',
                        type: 'GET',
                        data: requestParams,
                        error: function (e) {
                            console.error(e.responseText);
                            callback();
                        },
                        success: function (result) {
                            callback(JSON.parse(result));
                            if (modelVal && modelVal[selectizeObj.name]) {
                                selectizeInstance.setValue(modelVal[selectizeObj.name]);
                            }
                        }
                    });
                });
            }

            return $selectEntity;
        }


        $(function () {

            $citySelect = InitSelectize($('#HouseType'),@Html.NameFor(model => model.HouseType), "@Url.Action("GetHouseTypes")", 'key', 'value', null);
            $citySelect = InitSelectize($('#FloorNo'),@Html.NameFor(model => model.FloorNo), "@Url.Action("GetFloors")", 'key', 'value', null);

            initMap();

            $("form").submit(function (e) {
                debugger;
                console.log($('.not-full').length);
                if (($('.not-full').length > 0 && $("#HouseType").val() == 1) || ($('.not-full').length > 1 && $("#HouseType").val() == 2)) {
                    if (langu == "ar") {
                        swal("من فضلك قم بأختيار نوع المنزل ورقم الطابق");
                        e.preventDefault();
                    }
                    else {

                        swal("Please select your house type and floor number");
                        e.preventDefault();
                    }

                }
                else {
                    if ($("#AddressNotes").text().length > 0 && $("#AddressNotes").text().length > 0) {
                        //to enable submit
                        $('form').submit(formValidated);
                    }
                    else {
                        //to stop submit
                        //e.preventDefault();
                    }

                }

            });
            ////////////////////////////////////////for floor//////////////////////////////////////
            //$('#HouseType').on('change', function() {
            //    debugger
            //    if ( this.value == '1')
            //    {
            //        $("#FloorNoDiv").show();
            //    }
            //    else
            //    {
            //        $("#FloorNoDiv").hide();
            //    }
            //});
            /////////////////////////////////////////////////////////////////////////////////////////////
            //$(".not-full").children("input").attr("required", "");
            //$("form").submit(function () {
            //    debugger;
            //    if ($(".not-full").children("input").text().length>0) {
            //        $(".not-full").children("input").removeAttr("required");
            //    }


            //});

			// Validate Form
			var allValidate = $(".lblValidation");
			$('input[type=submit][name=BtnNext]').click(function () {
				allValidate.text("");
                if ($("#HouseType").val().trim().length == 0) {
                    if (langu == "ar") {
                        $("[data-valmsg-for='HouseType']").text("قم باختيار نوع المنزل");
                        return false;
                    }
                    else {
                        $("[data-valmsg-for='HouseType']").text("Choose your home type");
                        return false;

                    }

				}
                if ($("#HouseNo").val().trim().length == 0) {
                    if (langu == "ar") {
                        $("[data-valmsg-for='HouseNo']").text("قم بادخال رقم المنزل");
                        return false;
                    }
                    else {
                        $("[data-valmsg-for='HouseNo']").text("Enter the house number");
                        return false;
                    }
				}
                if ($("#FloorNo").val().trim().length == 0) {
                    //if ($("#HouseType").val() == 1) {
                        if (langu == "ar") {
                            $("[data-valmsg-for='FloorNo']").text("قم باختيار رقم الطابق");
                            return false;
                        }
                        else {
                            $("[data-valmsg-for='FloorNo']").text("Select the floor number");
                            return false;
                        }
                    //}
				}
                if ($("#AddressNotes").val().trim().length == 0) {
                    if (langu == "ar") {
                        $("[data-valmsg-for='AddressNotes']").text("قم بادخال العنوان ");
                        return false;
                    }
                    else {
                        $("[data-valmsg-for='AddressNotes']").text("Enter the address ");
                        return false;
                    }

                }
                debugger;
                if ($("#PartmentNo").val().trim().length == 0) {
                    if ($("#HouseType").val() == 1) {
                        if (langu == "ar") {
                            $("[data-valmsg-for='PartmentNo']").text("من فضلك قم بأدخال رقم الشقة");
                            return false;
                        }
                        else {
                            $("[data-valmsg-for='PartmentNo']").text("please insert Apartment No");
                            return false;
                        }
                    }
                    else {
                        $("[data-valmsg-for='PartmentNo']").text("");
                    }
                }
            });
            $("#PartmentNo").keyup(function () {
                if ($(this).val().trim().length > 0) {
                    $("[data-valmsg-for='PartmentNo']").text("");
                }
                else {
                    if ($("#HouseType").val() == 1) {
                        if (langu == "ar") {
                            $("[data-valmsg-for='PartmentNo']").text("من فضلك قم بأدخال رقم الشقة");
                        }
                        else {
                            $("[data-valmsg-for='PartmentNo']").text("please insert Apartment No");
                        }
                    }
                    else {
                        $("[data-valmsg-for='PartmentNo']").text("");
                    }
                   

                }
            });

			$("#HouseNo").keyup(function () {
				if ($(this).val().trim().length > 0) {
                    $("[data-valmsg-for='HouseNo']").text("");
				}
                else {
                    if (langu == "ar") {
                        $("[data-valmsg-for='HouseNo']").text("قم بادخال رقم المنزل");
                    }
                    else {
                        $("[data-valmsg-for='HouseNo']").text("Enter the house number");
                    }

				}
			});
			$("#AddressNotes").keyup(function () {
				if ($(this).val().trim().length > 0) {
                    $("[data-valmsg-for='AddressNotes']").text("");
				}
                else {
                    if (langu == "ar") {
                        $("[data-valmsg-for='AddressNotes']").text("قم بادخال العنوان ");
                    }
                    else {
                        $("[data-valmsg-for='AddressNotes']").text("Enter the address ");

                    }

				}
			});
			$("#HouseType").change(function () {
				if ($(this).val().trim().length > 0) {
                    $("[data-valmsg-for='HouseType']").text("");
				}
                else {
                    if (langu == "ar") {
                        $("[data-valmsg-for='HouseType']").text("قم باختيار نوع المنزل");
                    }
                    else {
                        $("[data-valmsg-for='HouseType']").text("Choose your home type");

                    }

                }

                if ($("#HouseType").val() == 1) {
                    //if (langu == "ar") {
                    //    if ($("#PartmentNo").val().trim().length == 0) {
                    //        $("[data-valmsg-for='PartmentNo']").text("من فضلك قم بأدخال رقم الشقة");
                            
                    //    }
                      
                    //}
                    //else {
                    //    if ($("#PartmentNo").val().trim().length == 0) {
                    //        $("[data-valmsg-for='PartmentNo']").text("please insert Apartment No");
                    //    }
                    //}

                }
                else {
                    $("[data-valmsg-for='PartmentNo']").text("");
                }
			});
			$("#FloorNo").change(function () {
			    if ($("#HouseType").val() == 1) {
			        if ($(this).val().trim().length > 0) {
			            $("[data-valmsg-for='FloorNo']").text("");
			        }
			        else {
			            if (langu == "ar") {
			                $("[data-valmsg-for='FloorNo']").text("قم باختيار رقم الطابق");

			            }
			            else {
			                $("[data-valmsg-for='FloorNo']").text("Select the floor number");

			            }
			        }
			    }
			});
			/////////
		});

    </script>
}
